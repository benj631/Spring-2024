d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% slice(-2)
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE) # %>% slice(-1)
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% slice(-2)
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% slice(-1)
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% slice(-1)
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% slice(-3)
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% drop_na()
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% drop_na()
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% drop_na()
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% drop_na()
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% drop_na()
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% drop_na()
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
new_df <- data.frame()
# Compute the mean values for each month and assign them to new columns in new_df
new_df$October <- mean(d2019_10[[3]], na.rm = TRUE)
new_df <- data.frame()
# Compute the mean values for each month and assign them to new columns in new_df
new_df$October <- mean(d2019_10$..3, na.rm = TRUE)
d2020_03.columnnames
names(d2020_03)
new_df <- data.frame()
# Compute the mean values for each month and assign them to new columns in new_df
new_df$October <- mean(d2019_10$...3, na.rm = TRUE)
mean_october <- mean(d2019_10$..3, na.rm = TRUE)
mean_november <- mean(d2019_11$..3, na.rm = TRUE)
mean_december <- mean(d2019_12$..3, na.rm = TRUE)
mean_january <- mean(d2020_01$..3, na.rm = TRUE)
mean_february <- mean(d2020_02$..2, na.rm = TRUE)
mean_march <- mean(d2020_03$..2, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Print the new data frame
print(new_df
mean_october <- mean(d2019_10$..3, na.rm = TRUE)
mean_november <- mean(d2019_11$..3, na.rm = TRUE)
mean_december <- mean(d2019_12$..3, na.rm = TRUE)
mean_january <- mean(d2020_01$..3, na.rm = TRUE)
mean_february <- mean(d2020_02$..2, na.rm = TRUE)
mean_march <- mean(d2020_03$..2, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Print the new data frame
print(new_df)
mean_october <- mean(d2019_10$..3, na.rm = TRUE)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% drop_na()
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% drop_na()
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% drop_na()
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% drop_na()
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% drop_na()
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% drop_na()
array <- list(d2019_10, d2019_11, d2019_12, d2020_01, d2020_02, d2020_03)
# Loop through each data frame in the list and convert specific columns to numeric
for (dataframe in array) {
dataframe$...2 <- as.numeric(dataframe$...2)
dataframe$...3 <- as.numeric(dataframe$...3)
}
array <- list(d2019_10, d2019_11, d2019_12, d2020_01)
# Loop through each data frame in the list and convert specific columns to numeric
for (dataframe in array) {
dataframe$...2 <- as.numeric(dataframe$...2)
}
array2 <- list(d2020_02, d2020_03)
for (dataframe in array2) {
dataframe$...3 <- as.numeric(dataframe$...2)
}
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
names(d2020_03)
array <- list(d2019_10, d2019_11, d2019_12, d2020_01)
# Loop through each data frame in the list and convert specific columns to numeric
for (dataframe in array) {
dataframe$...2 <- as.numeric(dataframe$...2)
}
array2 <- list(d2020_02, d2020_03)
for (dataframe in array2) {
dataframe$...3 <- as.numeric(dataframe$...2)
}
View(d2019_10)
View(d2019_11)
View(d2019_12)
View(d2020_01)
View(d2020_02)
View(d2020_03)
names(d2020_03)
array <- list(d2019_10, d2019_11, d2019_12, d2020_01)
# Loop through each data frame in the list and convert specific columns to numeric
for (dataframe in array) {
dataframe$...2 <- as.numeric(dataframe$...2)
}
array2 <- list(d2020_02, d2020_03)
for (dataframe in array2) {
dataframe$...3 <- as.numeric(dataframe$...2)
}
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% drop_na()
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% drop_na()
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% drop_na()
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% drop_na()
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% drop_na()
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% drop_na()
mean_october <- mean(d2019_10$..2, na.rm = TRUE)
mean_november <- mean(d2019_11$..2, na.rm = TRUE)
mean_december <- mean(d2019_12$..2, na.rm = TRUE)
mean_january <- mean(d2020_01$..2, na.rm = TRUE)
mean_february <- mean(d2020_02$..3, na.rm = TRUE)
mean_march <- mean(d2020_03$..3, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Print the new data frame
print(new_df)
mean_october <- mean(d2019_10$...2, na.rm = TRUE)
mean_november <- mean(d2019_11$...2, na.rm = TRUE)
mean_december <- mean(d2019_12$...2, na.rm = TRUE)
mean_january <- mean(d2020_01$...2, na.rm = TRUE)
mean_february <- mean(d2020_02$...3, na.rm = TRUE)
mean_march <- mean(d2020_03$...3, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Print the new data frame
print(new_df)
d2019_10 <- read_excel("cpiaverageprices201910.xlsx", col_names = TRUE)  %>% drop_na()
d2019_11 <- read_excel("cpiaverageprices201911.xlsx", col_names = TRUE)  %>% drop_na()
d2019_12 <- read_excel("cpiaverageprices201912.xlsx", col_names = TRUE)  %>% drop_na()
d2020_01 <- read_excel("cpiaverageprices202001.xlsx", col_names = TRUE)  %>% drop_na()
d2020_02 <- read_excel("cpiaverageprices202002.xlsx", col_names = TRUE)  %>% drop_na()
d2020_03 <- read_excel("cpiaverageprices202003.xlsx", col_names = TRUE)  %>% drop_na()
array <- list(d2019_10, d2019_11, d2019_12, d2020_01)
# Loop through each data frame in the list and convert specific columns to numeric
for (dataframe in array) {
dataframe$...3 <- as.numeric(dataframe$...2)
}
array2 <- list(d2020_02, d2020_03)
for (dataframe in array2) {
dataframe$...2 <- as.numeric(dataframe$...2)
}
array <- list(d2019_10, d2019_11, d2019_12, d2020_01)
# Loop through each data frame in the list and convert specific columns to numeric
for (dataframe in array) {
dataframe$...3 <- as.numeric(dataframe$...3)
}
array2 <- list(d2020_02, d2020_03)
for (dataframe in array2) {
dataframe$...2 <- as.numeric(dataframe$...2)
}
mean_october <- mean(d2019_10$...2, na.rm = TRUE)
mean_november <- mean(d2019_11$...2, na.rm = TRUE)
mean_december <- mean(d2019_12$...2, na.rm = TRUE)
mean_january <- mean(d2020_01$...2, na.rm = TRUE)
mean_february <- mean(d2020_02$...3, na.rm = TRUE)
mean_march <- mean(d2020_03$...3, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Print the new data frame
print(new_df)
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Print the new data frame
print(new_df)
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Create a new data frame with these mean values
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
new_df$Month <- rownames(new_df)
# Pivot new_df from wide to long format
new_df_long <- pivot_longer(new_df, cols = -Month, names_to = "Month", values_to = "Mean")
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Example: Assuming new_df is defined correctly with mean values for each month
new_df <- data.frame(
October = mean_october,
November = mean_november,
December = mean_december,
January = mean_january,
February = mean_february,
March = mean_march
)
# Add a Month column based on row names (assuming row names are months)
new_df$Month <- rownames(new_df)
# Pivot new_df from wide to long format
new_df_long <- pivot_longer(new_df,
cols = -Month,        # Columns to pivot (excluding Month)
names_to = "Month",   # New column for month names
values_to = "Mean")   # New column for mean values
# Calculate mean values for each month
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Create a data frame with mean values and months as rows
new_df <- data.frame(
Month = c("October", "November", "December", "January", "February", "March"),
Mean = c(mean_october, mean_november, mean_december, mean_january, mean_february, mean_march)
)
# Print the new data frame
print(new_df)
ggplot(new_df,aes(x=month,y=Mean))+
geom_point()+
geom_line()
# Create ggplot object
ggplot(new_df, aes(x = Month, y = Mean)) +
geom_point() +  # Add points
geom_line() +   # Connect points with lines
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Add axis labels and title
theme_minimal()  # Optional: Apply a minimal theme
# Calculate mean values for each month
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Create a data frame with mean values and months as rows
new_df <- data.frame(
Month = c("October", "November", "December", "January", "February", "March"),
Mean = c(mean_october, mean_november, mean_december, mean_january, mean_february, mean_march)
)
# Convert Month to factor with desired order
new_df$Month <- factor(new_df$Month, levels = c("October", "November", "December", "January", "February", "March"))
# Print the new data frame
print(new_df)
# Create ggplot object
ggplot(new_df, aes(x = Month, y = Mean)) +
geom_point() +  # Add points
geom_line() +   # Connect points with lines
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Add axis labels and title
theme_minimal()  # Optional: Apply a minimal theme
# Create ggplot object
ggplot(new_df, aes(x = Month, y = Mean)) +
geom_point() +  # Add points
geom_line() +   # Connect points with lines
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Add axis labels and title
theme_bw()  # Optional: Apply a minimal theme
# Create ggplot object
ggplot(new_df, aes(x = Month, y = Mean)) +
geom_point() +  # Add points
geom_line(linetype = "dashed") +   # Connect points with lines
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Add axis labels and title
theme_bw()  # Optional: Apply a minimal theme
# Calculate mean values for each month
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Create a data frame with mean values and months as rows
new_df <- data.frame(
Month = c("October", "November", "December", "January", "February", "March"),
Mean = c(mean_october, mean_november, mean_december, mean_january, mean_february, mean_march)
)
# Convert Month to factor with desired order
new_df$Month <- factor(new_df$Month, levels = c("October", "November", "December", "January", "February", "March"))
# Print the new data frame
print(new_df)
# Create ggplot object
ggplot(new_df, aes(x = Month, y = Mean)) +
geom_point() +  # Add points
geom_line(linetype = "dashed") +   # Connect points with lines
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Add axis labels and title
theme_bw()  # Optional: Apply a minimal theme
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed") +      # Connect points with dashed line
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Labels and title
theme_bw()                            # Apply black and white theme
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Month", y = "Mean Value", title = "Mean Values by Month") +  # Labels and title
theme_bw()                            # Apply black and white theme
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw()                            # Apply black and white theme
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw() +                          # Apply black and white theme
theme(panel.border = element_blank())
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point(position = position_nudge(x = 0.5, y = 0)) +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw() +                          # Apply black and white theme
theme(panel.border = element_blank())
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point(position = position_nudge(x = 0.0, y = .2)) +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw() +                          # Apply black and white theme
theme(panel.border = element_blank())
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw() +                          # Apply black and white theme
theme(panel.border = element_blank())
# Calculate mean values for each month
mean_october <- mean(d2019_10$...3, na.rm = TRUE)
mean_november <- mean(d2019_11$...3, na.rm = TRUE)
mean_december <- mean(d2019_12$...3, na.rm = TRUE)
mean_january <- mean(d2020_01$...3, na.rm = TRUE)
mean_february <- mean(d2020_02$...2, na.rm = TRUE)
mean_march <- mean(d2020_03$...2, na.rm = TRUE)
# Create a data frame with mean values and months as rows
new_df <- data.frame(
Month = c("October", "November", "December", "January", "February", "March"),
Mean = c(mean_october, mean_november, mean_december, mean_january, mean_february, mean_march)
)
new_df$Mean <- round(new_df$Mean, digits = 2)
# Convert Month to factor with desired order
new_df$Month <- factor(new_df$Month, levels = c("October", "November", "December", "January", "February", "March"))
# Print the new data frame
print(new_df)
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw() +                          # Apply black and white theme
theme(panel.border = element_blank())
ggplot(new_df, aes(x = Month, y = Mean, group = 1)) +  # Group by a constant to connect all points
geom_point() +                        # Add points
geom_line(linetype = "dashed",col="red") +      # Connect points with dashed line
labs(x = "Time Period", y = "Average Prices", title = "CPI food price averages") +  # Labels and title
theme_bw() +                          # Apply black and white theme
theme(panel.border = element_blank(),
panel.grid.minor = element_blank())
library(tidyverse)
library(readxl)
# File paths (adjust these paths to your actual file paths)
file_paths <- c("cpiaverageprices201910.xlsx", "cpiaverageprices201911.xlsx",
"cpiaverageprices201912.xlsx", "cpiaverageprices202001.xlsx",
"cpiaverageprices202002.xlsx", "cpiaverageprices202003.xlsx")
# Function to read and process each file
read_and_process <- function(file_path) {
# Read Excel file and drop NA rows
df <- read_excel(file_path, col_names = TRUE) %>%
drop_na()
# Extract month and mean price
month <- str_extract(file_path, "\\d{4}(\\d{2})")  # Extract month from file name
mean_price <- mean(df$...3)  # Calculate mean price
# Return month and mean price as a named list
return(list(month = month, mean_price = mean_price))
}
# Initialize an empty list to store results
monthly_means <- list()
# Loop through each file path and process
for (file_path in file_paths) {
result <- read_and_process(file_path)
monthly_means[[result$month]] <- result$mean_price
}
# Convert list to a dataframe
monthly_means_df <- as.data.frame(t(monthly_means))
names(monthly_means_df) <- c("October_mean", "November_mean", "December_mean",
"January_mean", "February_mean", "March_mean")
# Print the resulting dataframe
print(monthly_means_df)
library(tidyverse)
library(readxl)
# File paths (adjust these paths to your actual file paths)
file_paths <- c("cpiaverageprices201910.xlsx", "cpiaverageprices201911.xlsx",
"cpiaverageprices201912.xlsx", "cpiaverageprices202001.xlsx",
"cpiaverageprices202002.xlsx", "cpiaverageprices202003.xlsx")
# Function to read and process each file
read_and_process <- function(file_path) {
# Read Excel file and drop NA rows
df <- read_excel(file_path, col_names = TRUE) %>%
drop_na()
# Extract month and mean price
month <- str_extract(file_path, "\\d{4}(\\d{2})")  # Extract month from file name
mean_price <- mean(df$...3)  # Calculate mean price
# Return month and mean price as a named list
return(list(month = month, mean_price = mean_price))
}
# Initialize an empty list to store results
monthly_means <- list()
# Loop through each file path and process
for (file_path in file_paths) {
result <- read_and_process(file_path)
monthly_means[[result$month]] <- result$mean_price
}
# Convert list to a dataframe
monthly_means_df <- as.data.frame(t(monthly_means))
names(monthly_means_df) <- c("October_mean", "November_mean", "December_mean",
"January_mean", "February_mean", "March_mean")
# Print the resulting dataframe
View(monthly_means_df)
