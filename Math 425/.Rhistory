b <- coef(u.lm)
curve(b[1] + b[2]*x + b[3]*60 + b[4]*x*60, add=TRUE)
print(b[1] + b[2]*2004 + b[3]*60 + b[4]*2004*60)
print(b[1] + b[2]*2006 + b[3]*60 + b[4]*2006*60)
print(b[1] + b[2]*2004 + b[3]*60 + b[4]*2004*60)
print(b[1] + b[2]*2006 + b[3]*60 + b[4]*2006*60)
summary(u.lm)
boxCox(u.lm)
u.lm <- lm(temp ~ ccf, data=Utilities)
summary(u.lm)
boxCox(u.lm)
u.lm <- lm(temp ~ ccf, data=Utilities)
summary(u.lm)
boxCox(u.lm)
plot(totalbill ~ month, data=cars, main="car data set")
plot(totalbill ~ month, data=Utilities, main="car data set")
lines(lowess(Utilities$month, Utilities$totalbill, f=.2))
plot(totalbill ~ month, data=Utilities, main="car data set")
lines(lowess(Utilities$month, Utilities$totalbill, f=.2))
plot(Utilities$month, Utilities$totalbill, main="LOESS Curve",
xlab="Month", ylab="Totalbill", pch=19, col="blue")
# Fit the LOESS curve with 20% of the local points
span_value <- 0.3
loess_fit <- loess(totalbill ~ month, data=Utilities, span=span_value,degree=2)
# Add the LOESS curve to the plot
lines(Utilities$month, predict(loess_fit), col="red", lwd=2)
plot(totalbill ~ month, data=Utilities, main="car data set")
lines(lowess(Utilities$month, Utilities$totalbill, f=.2))
plot(Utilities$month, Utilities$totalbill, main="LOESS Curve",
xlab="Month", ylab="Totalbill", pch=19, col="blue")
# Fit the LOESS curve with 20% of the local points
span_value <- 0.3
loess_fit <- loess(totalbill ~ month, data=Utilities, span=span_value,degree=2)
# Add the LOESS curve to the plot
lines(Utilities$month, predict(loess_fit), col="red", lwd=2)
plot(Utilities$month, Utilities$totalbill, main="LOESS Curve",
xlab="Month", ylab="Totalbill", pch=19, col="blue")
# Fit the LOESS curve with 20% of the local points
span_value <- 0.3
loess_fit <- loess(totalbill ~ month, data=Utilities, span=span_value,degree=2)
# Add the LOESS curve to the plot
lines(Utilities$month, predict(loess_fit), col="red", lwd=2)
plot(Utilities$month, Utilities$totalbill, main="LOESS Curve",
xlab="Month", ylab="Totalbill", pch=19, col="blue")
# Fit the LOESS curve with 20% of the local points
span_value <- 0.3
loess_fit <- loess(totalbill ~ month, data=Utilities, span=span_value,degree=2)
# Add the LOESS curve to the plot
#lines(Utilities$month, predict(loess_fit), col="red", lwd=2)
plot(Utilities$month, Utilities$totalbill, main="LOESS Curve",
xlab="Month", ylab="Totalbill", pch=19, col="blue")
# Fit the LOESS curve with 20% of the local points
span_value <- 0.3
loess_fit <- loess(totalbill ~ month, data=Utilities, span=span_value,degree=2)
# Add the LOESS curve to the plot
lines(Utilities$month, predict(loess_fit), col="red", lwd=2)
pred <- predict(loess_fit,newdata=data.frame(month=9))
pred
library(mosaic)
plot(totalbill ~ gasbill, data=Utilities)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
plot(totalbill ~ gasbill, data=Utilities)
abline(u.lm)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
abline(u.lm,col="red")
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
plot(totalbill ~ gasbill, data=Utilities)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
abline(u.lm,col="red")
library(mosaic)
plot(totalbill ~ gasbill, data=Utilities)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
abline(u.lm,col="red")
pred <- predict(u.lm,newdata=data.frame(gasbill=150),interval="prediction",confidence=.95)
pred <- predict(u.lm,newdata=data.frame(gasbill=150),interval="prediction",confidence=.95)
pred
u.lm <-  lm(gasbill ~ ccf, data=Utilities)
summary(u.lm)
u.lm <-  lm(gasbill ~ ccf, data=Utilities)
summary(u.lm)
pairs(airquality)
aq1.lm <-lm(,data=airquality)
aq1.lm <-lm(Solar.R ~ Wind ,data=airquality)
aq2.lm <-lm(Ozone ~ Temp ,data=airquality)
aq3.lm <-lm(Wind ~ Temp ,data=airquality)
aq4.lm <-lm(Ozone ~ Wind ,data=airquality)
summary(aq1.lm)
summary(aq2.lm)
summary(aq3.lm)
summary(aq4.lm)
pairs(Utilities)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
summary(u.lm)
u.lm <- lm(totalbill ~ gasbill, data=Utilities)
summary(u.lm)
u1.lm <- lm(totalbill ~ gasbill + elecbill,data=Utilities)
u2.lm <- lm(totalbill ~ gasbill + kwh,data=Utilities)
u3.lm <- lm(totalbill ~ gasbill + tmp,data=Utilities)
u1.lm <- lm(totalbill ~ gasbill + elecbill,data=Utilities)
u2.lm <- lm(totalbill ~ gasbill + kwh,data=Utilities)
u3.lm <- lm(totalbill ~ gasbill + temp,data=Utilities)
u4.lm <- lm(totalbill ~ gasbill + year,data=Utilities)
summary(u1.lm)
summary(u2.lm)
summary(u3.lm)
summary(u4.lm)
u.lm <- lm(elecbill ~ kwh, data=Utilities)
summary(u.lm)
estimate <- .108754
null_value <- .11
standard_error <- .005816
df <- 115
# Calculate t-value
t_value <- (estimate - null_value) / standard_error
# Calculate p-value
p_value <- 2 * (1 - pt(abs(t_value), df))
p_value
p_value <- .356
# t-value calculation
t_value <- qt(1 - p_value / 2, df)
t_value
df = 115
p_value <- .356
# t-value calculation
t_value <- qt(1 - p_value / 2, df)
t_value
slope <- .2339
se_slope <- ..2524
slope <- .2339
se_slope <- .2524
df <- 115  # Replace this with your actual degrees of freedom
# Critical t-value for 95% confidence
t_critical <- qt(1 - 0.05 / 2, df)
# Margin of Error
margin_of_error <- t_critical * se_slope
# Confidence Interval
lower_bound <- slope - margin_of_error
upper_bound <- slope + margin_of_error
# Print the results
cat("Slope Estimate: ", slope, "\n")
cat("95% Confidence Interval: [", lower_bound, ", ", upper_bound, "]\n")
summary(u.lm)
u.lm <- lm(totalbill ~ kwh + ccf + year, data=Utilities)
summary(u.lm)
pred <- predict(u.lm,newdata=data.frame(ccf=1,year=2024))
?Utilities
summary(u.lm)
library(pander)
pander(summary(u.lm))
pred <- predict(u.lm,newdata=data.frame(ccf=1,year=2024,kwh=1))
pred
pred <- predict(u.lm,newdata=data.frame(ccf=1,year=2024,kwh=100))
pred
pred <- predict(u.lm,newdata=data.frame(ccf=1,year=2024,kwh=0))
pred
pander(summary(u.lm))
plot(gasbill ~ thermsPerDay,data=Utilities)
u.lm <- lm(gasbill ~ thermsPerDay,data=Utilities)
summary(u.lm)
boxCox(u.lm)
plot(gasbill ~ thermsPerDay,data=Utilities)
u.lm <- lm(gasbill ~ thermsPerDay,data=Utilities)
boxCox(u.lm)
plot(gasbill ~ thermsPerDay,data=Utilities)
u.lm <- lm(gasbill ~ thermsPerDay,data=Utilities)
boxCox(u.lm)
plot(gasbill ~ thermsPerDay,data=Utilities)
b <- coef(u.lm)
curve((b[1]+b[2]*x)^2)
plot(gasbill ~ thermsPerDay,data=Utilities)
b <- coef(u.lm)
curve((b[1]+b[2]*x)^2,add=TRUE)
plot(gasbill ~ thermsPerDay,data=Utilities)
u.s.lm <- lm(sqrt(gasbill) ~ thermsPerDay,data=Utilities)
b <- coef(u.s.lm)
curve((b[1]+b[2]*x)^2,add=TRUE)
u.lm <- lm(gasbill ~ thermsPerDay,data=Utilities)
boxCox(u.lm)
plot(gasbill ~ thermsPerDay,data=Utilities)
u.s.lm <- lm(sqrt(gasbill) ~ thermsPerDay,data=Utilities)
b <- coef(u.s.lm)
curve((b[1]+b[2]*x)^2,add=TRUE)
u.q.lm <- lm(month ~ I(temp^2),data=Utilities)
u.q2.lm <- lm(month ~ temp + I(temp^2),data=Utilities)
b <- coef(u.q.lm)
b2 <- coef(u.q2.lm)
plot(month ~ temp,data=Utilities)
curve(b[1] *x,col="blue",add=TRUE)
curve(b2[1] + b2[2] *x,col="red",add=TRUE)
u.q.lm <- lm(temp ~ I(month^2),data=Utilities)
u.q2.lm <- lm(temp ~ month + I(month^2),data=Utilities)
b <- coef(u.q.lm)
b2 <- coef(u.q2.lm)
plot(month ~ temp,data=Utilities)
curve(b[1] *x,col="blue",add=TRUE)
curve(b2[1] + b2[2] *x,col="red",add=TRUE)
u.q.lm <- lm(temp ~ I(month^2),data=Utilities)
u.q2.lm <- lm(temp ~ month + I(month^2),data=Utilities)
b <- coef(u.q.lm)
b2 <- coef(u.q2.lm)
plot(temp ~ month,data=Utilities)
curve(b[1] *x,col="blue",add=TRUE)
curve(b2[1] + b2[2] *x,col="red",add=TRUE)
u.q.lm <- lm(temp ~ I(month^2),data=Utilities)
u.q2.lm <- lm(temp ~ month + I(month^2),data=Utilities)
summary(u.q.lm)
summary(u.q2.lm)
b <- coef(u.q.lm)
b2 <- coef(u.q2.lm)
plot(temp ~ month,data=Utilities)
curve(b[1]*x,col="blue",add=TRUE)
curve(b2[1] + b2[2] *x,col="red",add=TRUE)
summary(u.q.lm)
summary(u.q2.lm)
u.q.lm <- lm(temp ~ I(month^2),data=Utilities)
u.q2.lm <- lm(temp ~ month + I(month^2),data=Utilities)
summary(u.q.lm)
summary(u.q2.lm)
b <- coef(u.q.lm)
b2 <- coef(u.q2.lm)
plot(temp ~ month,data=Utilities)
curve(b[1] + b[2]*x^2,col="blue",add=TRUE)
curve(b2[1] + b2[2] *x + b2[3]*x^2,col="red",add=TRUE)
summary(u.q.lm)
u.q.lm <- lm(temp ~ I(month^2),data=Utilities)
u.q2.lm <- lm(temp ~ month + I(month^2),data=Utilities)
summary(u.q.lm)
summary(u.q2.lm)
b <- coef(u.q.lm)
b2 <- coef(u.q2.lm)
plot(temp ~ month,data=Utilities)
curve(b[1] + b[2]*x^2,col="blue",add=TRUE)
curve(b2[1] + b2[2] *x + b2[3]*x^2,col="red",add=TRUE)
u.q3.lm <- lm(temp ~ month + I(month^2) + I(month^3),data=Utilities)
summary(u.q3.lm)
b <- coef(u.q3.lm)
plot(temp ~ month,data=Utilities)
curve(b[1] + b[2] *x + b[3]*x^2 + b[4]*x^3,col="green",add=TRUE)
u.q3.lm <- lm(temp ~ month + I(month^2) + I(month^3),data=Utilities)
summary(u.q3.lm)
b <- coef(u.q3.lm)
plot(temp ~ month,data=Utilities)
curve(b[1] + b[2] *x + b[3]*x^2 + b[4]*x^3,col="darkgreen",add=TRUE)
View(Prestige)
kf2l.lm <- lm(length ~ width + sex, data = KidsFeet)
# Extract coefficients
ß <- coef(kf2l.lm)
# Define prediction function for each sex level
y_boy <- function(x) ß[1] + ß[2] * x  # for sex == B
y_girl <- function(x) (ß[1] + ß[3]) + (ß[2] * x)  # for sex == G
# Generate sequence of x values for plotting
x_seq <- seq(min(KidsFeet$width), max(KidsFeet$width), length.out = 100)
# Calculate predicted values
y_pred_boy <- y_boy(x_seq)
y_pred_girl <- y_girl(x_seq)
# Plot using base R
plot(KidsFeet$width, KidsFeet$length, pch = 19,
col = ifelse(KidsFeet$sex == "G", "red", "blue"),
main = "Regression Lines for Different Sex Levels",
xlab = "Width", ylab = "Length")
# Add regression lines
lines(x_seq, y_pred_boy, col = "blue", lwd = 2)
lines(x_seq, y_pred_girl, col = "red", lwd = 2)
# Add legend
legend("topright", legend = c("Boys (B)", "Girls (G)"),
col = c("blue", "red"), lty = 1, lwd = 2)
Prestige2 <- mutate(Prestige, type = as.factor(ifelse(type == "prof", "prof","other")))
p2.lm <- lm(income ~ prestige + type + prestige:type, data=Prestige2)
summary(p2.lm)
estimate <- 213.37-116.74
null_value <- 0
standard_error <- 34.85
df <- 94
# Calculate t-value
t_value <- (estimate - null_value) / standard_error
# Calculate p-value
p_value <- 2 * (1 - pt(abs(t_value), df))
p_value
estimate <- 213.37
null_value <- 0
standard_error <- 70.52
df <- 94
# Calculate t-value
t_value <- (estimate - null_value) / standard_error
# Calculate p-value
p_value <- 2 * (1 - pt(abs(t_value), df))
p_value
confint(p2.lm[2])
confint(p2.lm[2],level=.95)
?confint
confint(p2.lm,level=.95)
?Chile
View(Chile)
c.lm <- lm(income ~ population,data=Chile)
summary(c.lm)
plot(c.lm,which=1:3)
plot(income ~ population,data=Chile)
plot(c.lm,which=1:3)
plot(income ~ population,data=Chile)
plot(c.lm,which=1:3)
plot(income ~ population,data=Chile)
abline(c.lm,col="purple")
plot(c.lm,which=1:3)
cor(Chile$income,Chile$population)
cor(Chile$population,Chile$income)
cor(Chile$population,Chile$income)
?cor
cor(Chile$population,Chile$income,use = "everything",
method = c("pearson", "kendall", "spearman"))
cor(Chile$population,Chile$income)
# This is broken?
?correlation
# This is broken?
?cor
cor(as.numeric(Chile$population),as.numeric(Chile$income)
cor(as.numeric(Chile$population),as.numeric(Chile$income)
cor(as.numeric(Chile$population),as.numeric(Chile$income))
cor(as.numeric(Chile$population),as.numeric(Chile$income))
# This is broken?
plot(dist~ speed,data=cars)
plot(dist~ speed,data=cars)
cars.lm <- lm(dist~ speed,data=cars)
cars2 <- cars
cars2[16] <-12
cars2 <- cars
cars2$dist[16] < -12
View(cars)
View(cars2)
cars2 <- cars
cars2$dist[16] <- 12
View(cars)
View(cars2)
summary(cars.lm)
plot(dist~ speed,data=cars)
cars.lm <- lm(dist~ speed,data=cars)
c2.lm <-lm(dist ~ speed,data=cars2)
abline(cars.lm,col="red")
abline(c2.lm,col="blue")
summary(cars.lm)
summary(c2.lm)
pander(summary(cars.lm))
pander(summary(c2.lm))
summary(cars.lm)
summary(c2.lm)
curve(exp(.56 + -0.21747*x + .2.05293*x))
curve(exp(.56 + -0.21747*x + 2.05293*x))
curve(exp(.56 + -0.21747*x + 2.05293))
curve(exp(.56 + -0.21747*x + 2.05293))
curve(exp(.56 + 0.21747*x + 2.05293),col="red")
curve(exp(.56 + -0.21747*x - 2.05293),col="blue")
curve(exp( .56 + +0.21747*x - 2.05293),col="green")
curve(exp(.56 + -0.21747*x + 2.05293),col="purple")
curve(exp(.56 + 0.21747*x + 2.05293),col="red")
curve(exp(.56 + -0.21747*x - 2.05293),col="blue")
curve(exp( .56 + +0.21747*x - 2.05293),col="green")
curve((exp(.56 + -0.21747*x + 2.05293)/(1+.56 + -0.21747*x + 2.05293)),col="purple")
curve(exp(.56 + 0.21747*x + 2.05293),col="red")
curve(exp(.56 + -0.21747*x - 2.05293),col="blue")
curve(exp( .56 + +0.21747*x - 2.05293),col="green")
thestuff1 <- .56 + -0.21747*x + 2.05293
thestuff2 <- .56 + 0.21747*x + 2.05293
thestuff3 <- .56 + -0.21747*x - 2.05293
thestuff4 <- .56 + +0.21747*x - 2.05293
curve((exp(thestuff1)/(1+exp(thestuff1))),col="purple")
thestuff1 <- function(x) .56 + -0.21747*x + 2.05293
thestuff2 <- function(x) .56 + 0.21747*x + 2.05293
thestuff3 <- function(x) .56 + -0.21747*x - 2.05293
thestuff4 <- function(x) .56 + +0.21747*x - 2.05293
curve((exp(thestuff1)/(1+exp(thestuff1))),col="purple")
thestuff1 <- function(x) { .56 + -0.21747*x + 2.05293 }
thestuff2 <- function(x) { .56 + 0.21747*x + 2.05293 }
thestuff3 <- function(x) { .56 + -0.21747*x - 2.05293 }
thestuff4 <- function(x) { .56 + +0.21747*x - 2.05293 }
curve((exp(thestuff1)/(1+exp(thestuff1))),col="purple")
curve((exp(thestuff1)/(1+exp(thestuff1))),col="purple")
thestuff1 <- function(x) { .56 + -0.21747*x + 2.05293 }
thestuff2 <- function(x) { .56 + 0.21747*x + 2.05293 }
thestuff3 <- function(x) { .56 + -0.21747*x - 2.05293 }
thestuff4 <- function(x) { .56 + +0.21747*x - 2.05293 }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x))),col="purple")
curve((exp(thestuff1(x))/(1+exp(thestuff1(x))),col="purple")
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
thestuff1 <- function(x) { .56 + -0.21747*x + 2.05293 }
thestuff2 <- function(x) { .56 + 0.21747*x + 2.05293 }
thestuff3 <- function(x) { .56 + -0.21747*x - 2.05293 }
thestuff4 <- function(x) { .56 + +0.21747*x - 2.05293 }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
curve((exp(thestuff2(x))/(1+exp(thestuff2(x)))),col="red")
curve((exp(thestuff3(x))/(1+exp(thestuff3(x)))),col="blue")
curve((exp(thestuff4(x))/(1+exp(thestuff4(x)))),col="green")
thestuff1 <- function(x) { .56 + -0.21747*x  }
thestuff2 <- function(x) { .56 + 0.21747*x }
thestuff3 <- function(x) { .56 + -0.21747*x}
thestuff4 <- function(x) { .56 + +0.21747*x }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
curve((exp(thestuff2(x))/(1+exp(thestuff2(x)))),col="red")
curve((exp(thestuff3(x))/(1+exp(thestuff3(x)))),col="blue")
curve((exp(thestuff4(x))/(1+exp(thestuff4(x)))),col="green")
thestuff1(0)
thestuff1(0)
thestuff2(0)
thestuff3(0)
thestuff4(0)
thestuff1 <- function(x) { .56 + -0.21747*x }
thestuff2 <- function(x) { .56 + 0.21747*x }
thestuff3 <- function(x) { .56 + -0.21747*x}
thestuff4 <- function(x) { .56 + +0.21747*x }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
curve((exp(thestuff2(x))/(1+exp(thestuff2(x)))),col="red")
curve((exp(thestuff3(x))/(1+exp(thestuff3(x)))),col="blue")
curve((exp(thestuff4(x))/(1+exp(thestuff4(x)))),col="green")
(0)
(0)
(0)
thestuff2(0)
thestuff4(0)
thestuff3(0)
thestuff1 <- function(x) { .56 + -0.21747*x + 2.05293 }
thestuff2 <- function(x) { .56 + 0.21747*x + 2.05293 }
thestuff3 <- function(x) { .56 + -0.21747*x - 2.05293 }
thestuff4 <- function(x) { .56 + +0.21747*x - 2.05293 }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
curve((exp(thestuff2(x))/(1+exp(thestuff2(x)))),col="red")
curve((exp(thestuff3(x))/(1+exp(thestuff3(x)))),col="blue")
curve((exp(thestuff4(x))/(1+exp(thestuff4(x)))),col="green")
thestuff1(0)
thestuff2(0)
thestuff3(0)
thestuff4(0)
thestuff1 <- function(x) { .56 + -0.21747*x + 2.05293 }
thestuff2 <- function(x) { .56 + 0.21747*x + 2.05293 }
thestuff3 <- function(x) { .56 + -0.21747*x - 2.05293 }
thestuff4 <- function(x) { .56 + +0.21747*x - 2.05293 }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
curve((exp(thestuff2(x))/(1+exp(thestuff2(x)))),col="red")
curve((exp(thestuff3(x))/(1+exp(thestuff3(x)))),col="blue")
curve((exp(thestuff4(x))/(1+exp(thestuff4(x)))),col="green")
thestuff1(0)
thestuff2(0)
thestuff3(0)
thestuff4(0)
pred <- 85.7380 + -0.1187 * 150 + -29.8786 + .2950 * 150
pred
View(mtcars)
plot(mpg ~ wt,data=mtcars)
plot(mpg ~ wt,data=mtcars,pch=16,col="red")
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick")
?mtcars
pred <- predict(mtc.log.lm,newdata=data.frame(2.05))
mtc.log.lm <- lm(log(mpg) ~ wt,data=mtcars)
pred <- predict(mtc.log.lm,newdata=data.frame(2.05))
mtc.log.lm <- lm(log(mpg) ~ wt,data=mtcars)
pred <- predict(mtc.log.lm,newdata=data.frame(2.05))
pred <- predict(mtc.log.lm,newdata=data.frame(wt=2.05))
pred
pred <- predict(mtc.log.lm,newdata=data.frame(wt=2.05),interval="prediction",level=.95)
pred
exp(pred)
?hline
?yline
?plot
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick")
abline(y=19.8,add=TRUE)
?abline
abline(h=19.8,add=TRUE)
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick")
abline(h=19.8,add=TRUE)
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick")
abline(h=19.8)
abline(h=35.2)
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick",ylim=c(0,50))
abline(h=19.8)
abline(h=35.2)
mtc.log.lm <- lm(log(mpg) ~ wt,data=mtcars)
pred <- predict(mtc.log.lm,newdata=data.frame(wt=2.05),interval="prediction",level=.95)
pred
summary(mtc.log.lm)
mtc.log.lm <- lm(log(mpg) ~ wt,data=mtcars)
summary(mtc.log.lm)
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick",ylim=c(0,50))
abline(h=19.8)
abline(h=35.2)
b <- coef(mtc.log.lm)
curve(exp(b[1]+b[2]*x),col="blue")
plot(mpg ~ wt,data=mtcars,pch=16,col="firebrick",ylim=c(0,50))
abline(h=19.8)
abline(h=35.2)
b <- coef(mtc.log.lm)
curve(exp(b[1]+b[2]*x),col="blue",add=TRUE)
thestuff1 <- function(x) { .56 - 0.21747*x + 2.05293 }
thestuff2 <- function(x) { .56 + 0.21747*x + 2.05293 }
thestuff3 <- function(x) { .56 - 0.21747*x - 2.05293 }
thestuff4 <- function(x) { .56 + 0.21747*x - 2.05293 }
curve((exp(thestuff1(x))/(1+exp(thestuff1(x)))),col="purple")
curve((exp(thestuff2(x))/(1+exp(thestuff2(x)))),col="red")
curve((exp(thestuff3(x))/(1+exp(thestuff3(x)))),col="blue")
curve((exp(thestuff4(x))/(1+exp(thestuff4(x)))),col="green")
thestuff1(0)
thestuff2(0)
thestuff3(0)
thestuff4(0)
cats.lm <- lm(Hwt ~ Bwt, data=cats)
summary(cats.lm)
plot(temp ~ ccf, data=Utilities)
curve((8.523 - 0.021*x)^2, add=TRUE, col="skyblue")
glm1 <- glm(Temp > 80 ~ Wind + as.factor(Month %in% c(6,7,8)), data=airquality, family=binomial)
summary(glm1)
plot((Temp > 80) + (Month %in% 6:8)*.01 - 0.005 ~ Wind, data=airquality, col=as.factor(Month %in% 6:8), ylab="Probability of Temp > 80")
legend("topright", cex=0.8, title="Month", legend=c("Spring/Fall", "Summer"), pch=16, col=palette())
b <- coef(glm1); curve(1/(1+exp(-b[1] - b[2]*x)), add=TRUE, col=palette()[1])
b <- coef(glm1); curve(1/(1+exp(-b[1] - b[2]*x - b[3] )), add=TRUE, col=palette()[2])
